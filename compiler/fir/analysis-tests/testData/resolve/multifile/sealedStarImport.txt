FILE: test.kt
    public sealed class Test : R|kotlin/Any| {
        constructor(): R|test/Test| {
            super<R|kotlin/Any|>()
        }

        public final object O : R|test/Test| {
            constructor(): R|test/Test.O| {
                super<R|test/Test|>()
            }

        }

        public final class Extra : R|test/Test| {
            constructor(x: R|kotlin/Int|): R|test/Test.Extra| {
                super<R|test/Test|>()
            }

            public final val x: R|kotlin/Int| = R|<local>/x|
                public get(): R|kotlin/Int|

        }

    }
FILE: main.kt
    public abstract class Factory : R|kotlin/Any| {
        constructor(): R|other/Factory| {
            super<R|kotlin/Any|>()
        }

        public abstract fun createTest(): R|ERROR CLASS: Symbol not found, for `Test`|

        public abstract fun createObj(): R|test/Test.O|

        public abstract fun createExtra(): R|test/Test.Extra|

    }
